"use client";
import "./globals.css";
import type { Metadata } from "next";
import { useRouter, usePathname } from "next/navigation";
import { useEffect, useState } from "react";
import Link from "next/link";
import { cls } from "@/libs/utils";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

interface RootLayout {
  main?: boolean;
  children: React.ReactNode;
  title?: string | boolean;
  canGoBack?: boolean;
  hasTabBar?: boolean;
}

export default function RootLayout({
  main,
  children,
  title,
  canGoBack,
  hasTabBar,
}: RootLayout) {
  const router = useRouter();
  const path = usePathname();
  const [titles, setTitles] = useState();
  useEffect(() => setTitles(title as any), []);
  //next는 서버에서 완성된 페이지를 클라이언트에 제공하기 때문에 사용자 환경에 따라 달라지는 if나 삼항연산자와 같은 것을 사용할수없다. 따라서 처음 렌더링 시킬 페이지를 useEffect함수를 사용하여 변할수없는 고정된값을 next서버에 보낸후 클라이언트가 완성된 페이지를 받아온 뒤 state변경을 해줘야한다.
  return (
    <html>
      <body className="w-full max-w-xl mx-auto pt-[80px] pb-[70px]">
        {!main && titles ? (
          //조건에 !main만 있을 경우 !main조건에 일치하는 모든페이지에 무조건 nav가 렌더링 되기 때문에 nav가 hydration 과정을 거쳐서 두번 렌더링 되게된다. 따라서 useEffect에 걸어놓은 title이 존재할때만 렌더링되게 조건을 걸어줌.
          <nav
            className={cls(
              "bg-white text-lg font-medium py-4 fixed text-gray-700 border-b border-l border-r top-0 flex items-center w-full max-w-xl mx-auto px-6",
              !canGoBack ? "justify-center" : ""
            )}
          >
            {titles ? titles : null}
            {canGoBack ? (
              <button onClick={() => router.back()}>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  strokeWidth="1.5"
                  stroke="currentColor"
                  className="w-6 h-6"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    d="M15.75 19.5L8.25 12l7.5-7.5"
                  />
                </svg>
              </button>
            ) : null}
          </nav>
        ) : null}
        {children}
        {hasTabBar ? (
          <nav className="bg-white text-gray-800 border-t fixed bottom-0 py-3 px-10 flex justify-between items-center max-w-xl w-full select-none">
            <Link href="/">
              <div
                className={cls(
                  "flex flex-col items-center",
                  path === "/" ? "text-orange-500" : ""
                )}
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  strokeWidth="1.5"
                  stroke="currentColor"
                  className="w-6 h-6"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    d="M2.25 12l8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25"
                  />
                </svg>
                <span className="text-xs font-bold mt-1 text-gray-800">홈</span>
              </div>
            </Link>
            <Link href="/community">
              <div
                className={cls(
                  "flex flex-col items-center",
                  path === "/community" ? "text-orange-500" : ""
                )}
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  strokeWidth="1.5"
                  stroke="currentColor"
                  className="w-6 h-6"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    d="M12 7.5h1.5m-1.5 3h1.5m-7.5 3h7.5m-7.5 3h7.5m3-9h3.375c.621 0 1.125.504 1.125 1.125V18a2.25 2.25 0 01-2.25 2.25M16.5 7.5V18a2.25 2.25 0 002.25 2.25M16.5 7.5V4.875c0-.621-.504-1.125-1.125-1.125H4.125C3.504 3.75 3 4.254 3 4.875V18a2.25 2.25 0 002.25 2.25h13.5M6 7.5h3v3H6v-3z"
                  />
                </svg>
                <span className="text-xs font-bold mt-1 text-gray-800">
                  동네생활
                </span>
              </div>
            </Link>
            <Link href="chats">
              <div
                className={cls(
                  "flex flex-col items-center",
                  path === "/chats" ? "text-orange-500" : ""
                )}
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  strokeWidth="1.5"
                  stroke="currentColor"
                  className="w-6 h-6"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    d="M8.625 12a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H8.25m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H12m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0h-.375M21 12c0 4.556-4.03 8.25-9 8.25a9.764 9.764 0 01-2.555-.337A5.972 5.972 0 015.41 20.97a5.969 5.969 0 01-.474-.065 4.48 4.48 0 00.978-2.025c.09-.457-.133-.901-.467-1.226C3.93 16.178 3 14.189 3 12c0-4.556 4.03-8.25 9-8.25s9 3.694 9 8.25z"
                  />
                </svg>
                <span className="text-xs font-bold mt-1 text-gray-800">
                  채팅
                </span>
              </div>
            </Link>
            <Link href="/stream">
              <div
                className={cls(
                  "flex flex-col items-center",
                  path === "/stream" ? "text-orange-500" : ""
                )}
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  strokeWidth="1.5"
                  stroke="currentColor"
                  className="w-6 h-6"
                >
                  <path
                    strokeLinecap="round"
                    d="M15.75 10.5l4.72-4.72a.75.75 0 011.28.53v11.38a.75.75 0 01-1.28.53l-4.72-4.72M4.5 18.75h9a2.25 2.25 0 002.25-2.25v-9a2.25 2.25 0 00-2.25-2.25h-9A2.25 2.25 0 002.25 7.5v9a2.25 2.25 0 002.25 2.25z"
                  />
                </svg>
                <span className="text-xs font-bold mt-1 text-gray-800">
                  라이브
                </span>
              </div>
            </Link>
            <Link href="/profile">
              <div
                className={cls(
                  "flex flex-col items-center",
                  path === "/profile" ? "text-orange-500" : ""
                )}
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  strokeWidth="1.5"
                  stroke="currentColor"
                  className="w-6 h-6"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    d="M17.982 18.725A7.488 7.488 0 0012 15.75a7.488 7.488 0 00-5.982 2.975m11.963 0a9 9 0 10-11.963 0m11.963 0A8.966 8.966 0 0112 21a8.966 8.966 0 01-5.982-2.275M15 9.75a3 3 0 11-6 0 3 3 0 016 0z"
                  />
                </svg>
                <span className="text-xs font-bold mt-1 text-gray-800">
                  마이페이지
                </span>
              </div>
            </Link>
          </nav>
        ) : null}
      </body>
    </html>
  );
}
